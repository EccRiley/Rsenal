% Generated by roxygen2 (4.0.2): do not edit by hand
\name{depthbin}
\alias{depthbin}
\title{Equal depth binning}
\usage{
depthbin(ser, nbins = 10, qtype = 7, digits = 10, labelRange = T,
  labelPct = F, labelOrder = F)
}
\arguments{
\item{ser}{numeric vector to bin}

\item{nbins}{number of bins desired}

\item{qtype}{an integer between 1 and 9 selecting one of the nine quantile algorithms detailed below to be used.  See \code{\link{quantile}} for more details.  Default is 7.}

\item{digits}{number, number of digits to display in bin categories}

\item{labelRange}{logical: \code{TRUE} assigns a numeric score/ranking (ex. 1/3, 2/3, or 3/3 if 3 bins) to each bin. Can be combined with \code{labelOrder} and \code{labelPct}}

\item{labelPct}{logical: \code{TRUE} appends the percent of observations assigned to the bin to the factor level (name). Can be combined with \code{labelOrder} and \code{labelRange}}

\item{labelOrder}{logical: \code{TRUE} appends the ordinal position of the bin to the factor level (name).  Can be combined with \code{labelPct} and \code{labelRange}}
}
\value{
ordered factor vector with bins
}
\description{
Simple equal depth binning algorithm.
}
\examples{
## perfect equal depth bins
x1 <- rnorm(1000, 0, 20)
binned1 <- depthbin(x1, nbins=10)
table(binned1)

## slightly uneven bins with integer data
x2 <- rpois(1000, 3)
binned2 <- depthbin(x2, nbins=5)
summary(binned2)

## as good as we can get with skewed integer data
x3 <- round(abs(log(abs(rnorm(1000)))))
binned3 <- depthbin(x3, nbins=5)
summary(binned3)

## including more information in category names (levels of factor variable)
x4 <- round(abs(log(abs(rnorm(1000)))))
binned4 <- depthbin(x4, nbins=3, labelRange=T, labelPct=T, labelOrder=T)
summary(binned4)
}
\seealso{
\code{\link{quantile}}
}

